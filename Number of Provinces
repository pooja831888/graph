class Solution {
    static int numProvinces(ArrayList<ArrayList<Integer>> adj, int V) {
    int num=0;
    boolean[] visited = new boolean[V];
    int count = 0;
    for (int i = 0; i < V; i++) {
        if (!visited[i]) {
            count++;
            dfs(i, visited, adj, V);
        }
    }

    return count;
}

void dfs(int node, boolean[] visited, int[][] adj, int V) {
    visited[node] = true;

    for (int neighbour = 0; neighbour < V; neighbour++) {
        if (adj[node][neighbour] == 1 && !visited[neighbour]) {
            dfs(neighbour, visited, adj, V);
        }
    }
}
};
