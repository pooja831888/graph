 public ArrayList<Integer> bfs(ArrayList<ArrayList<Integer>> adj) {
            int V = adj.size();
            ArrayList<Integer> result = new ArrayList<>();
            boolean[] visited = new boolean[V]; // 0-based indexing
            Queue<Integer> q = new LinkedList<>();
            int root=0;
            q.add(root);
            visited[root] = true;
            
            while (!q.isEmpty()) {
                int node = q.poll();
                result.add(node);
                
                for (int neighbour : adj.get(node)) {
                    if (!visited[neighbour]) {
                        visited[neighbour] = true;
                        q.add(neighbour);
                    }
                }
            }
            
            return result;

    }
